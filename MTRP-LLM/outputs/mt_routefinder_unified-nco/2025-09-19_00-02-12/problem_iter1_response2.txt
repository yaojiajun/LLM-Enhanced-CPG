```python
import torch
import torch.nn.functional as F
import torch.distributions as tdist

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Compute a random heuristic score matrix
    num_nodes = current_distance_matrix.size(1) - 1
    pomo_size = current_distance_matrix.size(0)
    heuristic_scores = torch.zeros(pomo_size, num_nodes + 1)
    
    # Introduce enhanced randomness to avoid local optima
    random_dist = tdist.Categorical(torch.rand(pomo_size, num_nodes + 1))
    
    # Encoding randomness in heuristic scores
    heuristic_scores[random_dist.sample()] = 1

    return heuristic_scores
```
