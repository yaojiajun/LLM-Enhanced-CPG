```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Compute heuristic scores based on various factors
    load_feasibility = current_load[:, None] - delivery_node_demands
    open_load_feasibility = current_load_open[:, None] - delivery_node_demands_open
    time_window_penalty = F.relu((arrival_times + current_distance_matrix) - time_windows[:, 1].unsqueeze(0))
    pickup_capacity_check = pickup_node_demands[None, :] <= current_load[:, None]
    total_length_budget_check = current_length[:, None] - current_distance_matrix
                  
    # Calculate heuristic scores based on the above factors
    heuristic_scores = load_feasibility - open_load_feasibility + time_window_penalty + pickup_capacity_check.float() + total_length_budget_check
    
    return heuristic_scores
```
