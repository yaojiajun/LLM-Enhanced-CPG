```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    # Calculate load feasibility indicator
    load_feasibility = 1 - (current_load / delivery_node_demands).unsqueeze(1)

    # Calculate open route load feasibility indicator
    open_load_feasibility = 1 - (current_load_open / delivery_node_demands_open).unsqueeze(1)

    # Calculate time window feasibility
    arrival_diff = arrival_times[:, 1:] - arrival_times[:, :-1]
    on_time = ((arrival_diff <= time_windows[:, 1].unsqueeze(0)) & (arrival_diff >= time_windows[:, 0].unsqueeze(0))).float()

    # Calculate pickup feasibility indicator
    pickup_feasibility = 1 - (current_load / pickup_node_demands).unsqueeze(1)

    # Combine all indicators into a heuristic score matrix
    heuristic_matrix = load_feasibility * 0.3 + open_load_feasibility * 0.2 + on_time * 0.3 + pickup_feasibility * 0.2

    return heuristic_matrix

```
