```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Introducing adaptive weights and strategic exploration to enhance diversity and exploration in edge selection
    noise = torch.rand_like(current_distance_matrix) * torch.abs(torch.randn_like(current_distance_matrix) * 0.1)
    heuristic_scores = current_distance_matrix + noise

    return heuristic_scores
```  
