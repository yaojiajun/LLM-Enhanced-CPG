```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Modify the heuristics calculations related to current_distance_matrix, delivery_node_demands, and current_load
    
    # Distance heuristic with adjusted randomness factor for exploration
    normalized_distance_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(current_distance_matrix) * 1.0

    # Revised calculation of demand-based heuristic score with varying emphasis on high-demand nodes
    demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.5 + torch.max(
        delivery_node_demands) / 1.5 + torch.randn_like(current_distance_matrix) * 0.3

    # Introduce noise perturbation for diversity in exploration
    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.5

    # Combine the modified heuristic scores with diversified strategies for balanced exploration
    cvrp_scores = normalized_distance_scores + demand_scores + enhanced_noise

    # Retain the calculations for other constraints    
    # ...

    ```
