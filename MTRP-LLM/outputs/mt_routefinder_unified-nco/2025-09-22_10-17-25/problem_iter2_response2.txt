```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Modified heuristic calculations for current_distance_matrix, delivery_node_demands, and current_load
    reversed_distance_scores = current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 0.5

    demand_scores = (current_load.unsqueeze(1) - delivery_node_demands.unsqueeze(0)) * 0.7 + torch.max(
        delivery_node_demands) / 2.5 + torch.randn_like(current_distance_matrix) * 0.3

    # Placeholder operations for other parts of the original code without modification
    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.8
    
    total_scores = reversed_distance_scores + demand_scores + enhanced_noise

    return total_scores
```
