```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Modified heuristic scores for current_distance_matrix
    normalized_distance_scores = -(current_distance_matrix ** 2) / torch.max(current_distance_matrix) + torch.randn_like(current_distance_matrix) * 0.7

    # Modified heuristic scores for delivery_node_demands and current_load
    demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.5 + torch.sqrt(torch.abs((current_load - torch.mean(current_load))) * 1.5) + torch.randn_like(current_distance_matrix) * 0.5

    # Reusing the original calculations for remaining inputs
    # Fetch time and capacity indicators to reuse prior heuristics
    ...

    return normalized_distance_scores + demand_scores + enhanced_noise + vrptw_scores + vrpb_scores + vrpl_scores + ovrp_scores

```
