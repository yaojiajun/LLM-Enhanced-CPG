```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Adjust normalized distance-based heuristic score matrix with controlled randomness and modified weighting
    normalized_distance_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.rand_like(current_distance_matrix) * 0.7

    # Modify demand-based heuristic score calculation with different coefficients for delivery_node_demands and current_load
    demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.3 + torch.max(delivery_node_demands) / 4 + torch.randn_like(current_distance_matrix) * 0.2

    # Introduce random noise for exploration with increased noise level
    enhanced_noise = torch.randn_like(current_distance_matrix) * 2.0

    # Combine different heuristic scores using modified strategies for balanced exploration
    overall_scores = normalized_distance_scores + demand_scores + enhanced_noise

    return overall_scores
```
