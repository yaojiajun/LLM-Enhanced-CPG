```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Customized heuristics for model v5
    
    # Adjust the calculation of distance score based on an log method
    distance_heuristic = -torch.log(current_distance_matrix + 1)  # Modified distance heuristic with logarithmic transformation
    
    # Change how the delivery score is calculated by incorporating load remaining
    delivery_score = (torch.max(delivery_node_demands - current_load) * (current_load.sum() / (current_load.sum() + 1))) * 0.8
    
    # Modify the calculation of load score by considering the relative remaining load
    load_score = (current_load * 0.5 + current_load.max() * 0.2) / (current_load + 1)
    
    # Compute a random matrix for added diversity
    randomness_matrix = torch.randn_like(current_distance_matrix) * 0.2

    # Combine heuristic scores with updated calculations
    overall_scores = distance_heuristic + delivery_score.unsqueeze(0) + load_score.unsqueeze(1) + randomness_matrix

    return overall_scores
```
