```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Modifying the distance-based heuristic score matrix calculation
    distance_heuristic = (-current_distance_matrix / torch.min(current_distance_matrix)) + (torch.rand_like(current_distance_matrix) * 0.9)

    # Modifying the demand-based heuristic score matrix calculation
    delivery_score = (torch.abs(delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.6) + (torch.max(delivery_node_demands) / 2) - (torch.rand_like(current_distance_matrix) * 0.4)

    # Combining the various heuristics with added randomness for balanced exploration
    modified_scores = distance_heuristic + delivery_score
    
    return modified_scores

```
