```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    cvrp_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(current_distance_matrix) * 0.7

    demand_scores = (2 * delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.8 + torch.max(delivery_node_demands) / 2 + torch.randn_like(current_distance_matrix) * 0.5

    enhanced_noise = torch.randn_like(current_distance_matrix) * 2.0

    combined_scores = cvrp_scores + demand_scores + enhanced_noise
    
    vrptw_scores, vrpb_scores, vrpl_scores, vrpb_scores = torch.zeros_like(current_distance_matrix), torch.zeros_like(current_distance_matrix), torch.zeros_like(current_distance_matrix), torch.zeros_like(current_distance_matrix)

    overall_scores = combined_scores + vrptw_scores + vrpb_scores + vrpl_scores + vrpl_scores

    return overall_scores
```
