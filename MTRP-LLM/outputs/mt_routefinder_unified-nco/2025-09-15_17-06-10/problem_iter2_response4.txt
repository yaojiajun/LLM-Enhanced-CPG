```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Example heuristic computations incorporating multiple indicators with non-linear activation functions
    score1 = torch.sigmoid(current_distance_matrix)
    score2 = F.relu(torch.sin(current_distance_matrix))
    score3 = torch.sigmoid(current_load) * torch.sigmoid(current_load_open)
    score4 = torch.sigmoid((time_windows.sum(dim=1) - arrival_times.sum(dim=0)).clamp(min=0))
    
    heuristic_scores = (score1 * score2) + (score3) - (score4)

    return heuristic_scores
```
