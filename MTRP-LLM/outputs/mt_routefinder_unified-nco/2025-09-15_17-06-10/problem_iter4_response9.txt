```python
def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    rand_weights = torch.rand_like(current_distance_matrix)
    normalized_distance = current_distance_matrix / torch.max(current_distance_matrix)
    
    score1 = torch.sigmoid(normalized_distance) * rand_weights
    score2 = torch.relu(torch.sin(current_distance_matrix)) + rand_weights
    score3 = torch.tanh(torch.sqrt(current_distance_matrix)) - rand_weights
    heuristic_scores = score1 - score2 + score3

    return heuristic_scores
```
