```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Compute heuristic score matrix using weighted indicators, randomization, normalization, and non-linear functions
    weighted_sum = (current_distance_matrix + delivery_node_demands + current_load + delivery_node_demands_open + current_load_open + time_windows + arrival_times + pickup_node_demands + current_length)
    normalized_scores = (weighted_sum - torch.mean(weighted_sum)) / torch.std(weighted_sum)
    heuristic_scores = torch.relu(torch.tanh(normalized_scores))

    return heuristic_scores
```
