```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Calculate remaining capacity ratios
    remaining_cap_ratios = (current_load.unsqueeze(1) - delivery_node_demands) / (current_load + 1e-8)
    
    # Include randomness in scores
    random_scores = torch.randn_like(current_distance_matrix)
    
    # Heuristic Score Calculation (combination of ratios and randomness)
    heuristic_scores = remaining_cap_ratios + random_scores

    return heuristic_scores
```
