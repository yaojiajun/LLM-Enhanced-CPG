```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Calculate route feasibility indicators based on the given inputs
    feasibility_scores = torch.zeros_like(current_distance_matrix)  # Placeholder for feasibility scores
    
    # Implement your heuristic scoring logic here
    
    # Introduce controlled randomness in scoring
    feasibility_scores += torch.rand(feasibility_scores.size()) * 0.01
    
    return feasibility_scores
```
