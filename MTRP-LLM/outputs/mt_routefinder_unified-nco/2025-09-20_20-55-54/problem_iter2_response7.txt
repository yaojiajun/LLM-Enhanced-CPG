```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Incorporate information from time windows, arrival times, and pickup demands for edge selection
    time_window_diff = time_windows[:, 1] - arrival_times[:, :-1]
    pickup_demands_norm = pickup_node_demands + 1e-8
    pickup_ratio = pickup_node_demands / pickup_demands_norm

    # Calculate heuristic score matrix with controlled randomness and incorporating additional information
    heuristic_scores = torch.rand_like(current_distance_matrix) * 2 - 1 + time_window_diff + pickup_ratio

    return heuristic_scores
```
