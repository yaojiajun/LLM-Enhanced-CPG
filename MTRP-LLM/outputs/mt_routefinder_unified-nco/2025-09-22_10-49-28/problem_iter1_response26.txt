```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # New computation for adding randomness to current_distance_matrix
    norm_distance_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(current_distance_matrix) * 0.7

    # Modified demand-based heuristic score with different emphasis and noise level for delivery demands
    demand_scores = (delivery_node_demands.unsqueeze(1) - current_load.unsqueeze(0)) * 0.7 + torch.max(delivery_node_demands) / 2 + torch.randn_like(current_distance_matrix) * 0.6

    # Introduce more noise for exploration
    enhanced_noise = torch.randn_like(current_distance_matrix) * 3.0

    modified_scores = norm_distance_scores + demand_scores + enhanced_noise

    return modified_scores
```
