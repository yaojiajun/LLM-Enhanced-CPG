```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    normalized_distance_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 0.7

    delivery_scores = (delivery_node_demands.unsqueeze(0) + current_load.unsqueeze(1)) * 1.2 + torch.max(
        delivery_node_demands) / 2 + torch.rand_like(current_distance_matrix) * 0.3

    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.5

    combined_scores = normalized_distance_scores + delivery_scores + enhanced_noise

    return combined_scores
```
