```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Modify how distance heuristic is computed
    normalized_distance_scores_v2 = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 0.5
    
    # Modify how delivery score is calculated
    demand_scores_v2 = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.6 + torch.max(
        delivery_node_demands) * 0.3 + torch.randn_like(current_distance_matrix) * 0.3
    
    enhanced_noise_v2 = torch.randn_like(current_distance_matrix) * 1.5
    
    # Combine the modified heuristic scores
    v2_scores = normalized_distance_scores_v2 + demand_scores_v2 + enhanced_noise_v2
    
    # Leave other parts of the function unchanged
    
    overall_scores_v2 = v2_scores + # Add other scores
    
    return overall_scores_v2
```
