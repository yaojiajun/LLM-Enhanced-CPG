```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # cvrp_scores
    modified_distance_scores = current_distance_matrix**2 / torch.max(current_distance_matrix) - torch.randn_like(current_distance_matrix) * 0.8

    modified_demand_scores = (3 * delivery_node_demands.unsqueeze(0) - 0.5 * current_load.unsqueeze(1)) / torch.max(delivery_node_demands) + torch.randn_like(current_distance_matrix) * 0.3

    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.5

    cvrp_scores = modified_distance_scores + modified_demand_scores + enhanced_noise

    # vrptw_scores and vrpb_scores are unchanged

    # vrpl_scores remain as before

    #ovrp_scores unchanged
    
    overall_scores=cvrp_scores+vrptw_scores+vrpb_scores+vrpl_scores+ovrp_scores

    return overall_scores
```
