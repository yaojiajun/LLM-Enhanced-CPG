```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Modify the computation of the distance-based heuristic score matrix
    distance_heuristic = (current_distance_matrix / torch.sum(current_distance_matrix)) - torch.randn_like(current_distance_matrix) * 0.5

    # Adjust the calculation of demand-based heuristic score matrix
    delivery_score = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.6 + torch.max(
        delivery_node_demands) / 3 + torch.randn_like(delivery_node_demands.unsqueeze(0)) * 0.4

    # Calculate the total score incorporating the modified distance and demand scores alongside original calculations
    overall_scores = distance_heuristic + delivery_score + vrptw_scores + vrpb_scores + vrpl_scores + ovrp_scores

    return overall_scores
```
