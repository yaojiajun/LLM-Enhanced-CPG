```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # cvrp_scores
    # Modify the distance-based heuristic score matrix calculation with variance reduction
    normalized_distance_scores = 1.0 / (current_distance_matrix + 1e-6) + torch.randn_like(
        current_distance_matrix) * 0.5

    # Similar demand-based heuristic score variation but with a different focus
    demand_scores = current_load.unsqueeze(1) - delivery_node_demands + torch.max(
        delivery_node_demands) / 3 + torch.randn_like(current_distance_matrix) * 0.3

    # Introduce different enhanced noise for diversity and exploration ethics
    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.5

    cvrp_scores = normalized_distance_scores + demand_scores + enhanced_noise

    # Remainder of the code remains the same as heuristics_v1 for vrptw_scores, vrpb_scores, vrpl_scores, ovrp_scores, and overall_scores

    return overall_scores
```
