```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Modifying calculations related to distance, delivery demands, and current load
    distance_heuristic = -current_distance_matrix / (torch.max(current_distance_matrix) + 1e-8) + torch.randn_like(current_distance_matrix) * 0.7

    delivery_score = (delivery_node_demands.unsqueeze(0) / (current_load.unsqueeze(1) + 1e-8)) * 0.8 + (torch.max(delivery_node_demands) / 2) + torch.randn_like(current_distance_matrix) * 0.5

    # No modifications to pickup score
    
    basic_scores = distance_heuristic + delivery_score

    # Existing heuristics for other components
    vrptw_scores, vrpb_scores, vrpl_scores, ovrp_scores = ...
    
    overall_scores = basic_scores + vrptw_scores + vrpb_scores + vrpl_scores + ovrp_scores

    return overall_scores
```
