```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Additional creativity involved in modifying distance-based heuristic score calculation
    modified_distance_scores = -torch.sqrt(current_distance_matrix) / torch.max(torch.sqrt(current_distance_stacked)) + torch.randn_like(current_distance_stacked) * 0.6

    # Compute the demand-based heuristic score matrix with custom significance
    demand_scores = (2*delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.9 + torch.max(delivery_node_demands) / 2 + torch.randn_like(current_distance_stacked) * 0.8

    # Proceed with the existing structure for other score calculations

    return modified_distance_scores + demand_scores + enhanced_noise + vrptw_scores + vrpb_scores + vrpl_scores + ovrp_scores
```
