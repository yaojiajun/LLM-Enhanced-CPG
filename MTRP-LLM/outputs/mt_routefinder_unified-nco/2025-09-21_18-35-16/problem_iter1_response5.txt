```python
import torch
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    num_nodes = current_distance_matrix.size(1) - 1
    num_trajectories = current_distance_matrix.size(0)

    # Customized heuristics for distance, delivery demands, and current load
    modified_distance_scores = current_distance_matrix + torch.log((torch.arange(num_nodes) + 1).float()).unsqueeze(0)

    delivery_closeness = (torch.max(delivery_node_demands) - torch.abs(delivery_node_demands - current_load)).unsqueeze(0)
    delivery_score = 1 / (1 + delivery_closeness)

    modified_load = current_load + torch.arange(num_trajectories).unsqueeze(1) * 0.05
    load_score = 1 / (1 + modified_load)

    # Combining different scores to obtain the final heuristic scores
    overall_scores = modified_distance_scores * 0.3 + delivery_score * 0.5 + load_score * 0.2

    return overall_scores

```
