```python
import torch
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # cvrp_scores_mod
    noise_factor = 0.4
    
    normalized_distance_scores = -current_distance_matrix / torch.max(current_distance_matrix) * 0.75 + torch.randn_like(
        current_distance_matrix) * noise_factor

    demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.5 + torch.max(
        delivery_node_demands) / 2 + torch.randn_like(current_distance_matrix) * noise_factor

    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.6

    cvrp_scores_mod = normalized_distance_scores + demand_scores + enhanced_noise

    # Keep logic for other parts identical 

    return cvrp_scores_mod
```隐藏
