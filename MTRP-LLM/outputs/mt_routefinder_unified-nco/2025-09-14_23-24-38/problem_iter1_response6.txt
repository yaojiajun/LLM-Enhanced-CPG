```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    # Creating a heuristic score matrix based on various features
    load_score = torch.sigmoid(current_distance_matrix * (torch.abs(current_load - delivery_node_demands) + torch.abs(current_load_open - delivery_node_demands_open)))
    time_window_score = F.leaky_relu(current_distance_matrix / (time_windows[:, 1] - time_windows[:, 0]))
    pickup_score = torch.tanh(current_distance_matrix * pickup_node_demands)
    length_score = torch.relu(current_distance_matrix / current_length)

    # Combining different scores to get final heuristic score
    heuristics_score = load_score + 0.5 * time_window_score + 0.8 * pickup_score - 0.3 * length_score

    return heuristics_score

```
