```python
import torch
import torch.nn.functional as F
import torch.distributions.uniform

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor,
                     current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:

    # Calculate a randomness factor to introduce enhanced randomness
    randomness_factor = torch.distributions.uniform.Uniform(0, 1).sample(current_distance_matrix.size())

    # Create heuristic score matrix by combining different factors and adding randomness
    heuristic_score = current_distance_matrix * torch.exp(-current_load) + delivery_node_demands + \
                      current_load_open - current_load + time_windows.sum(dim=1) - arrival_times.mean(dim=1) + \
                      pickup_node_demands - current_length + randomness_factor

    return heuristic_score
```
