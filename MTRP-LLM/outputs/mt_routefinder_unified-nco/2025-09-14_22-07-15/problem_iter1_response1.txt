```python
import torch
import torch.nn.functional as F
import torch.distributions as tdist

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    num_nodes = current_distance_matrix.size(1) - 1
    pomo_size = current_distance_matrix.size(0)

    # Randomly assign heuristic scores to edges
    heuristic_scores = torch.zeros(pomo_size, num_nodes + 1)

    # Introduce enhanced randomness using Normal distribution
    rnd = tdist.Normal(torch.tensor(0.0), torch.tensor(1.0))
    
    # Assign random scores to edges
    heuristic_scores += rnd.sample(heuristic_scores.size())

    return F.normalize(heuristic_scores, p=2, dim=1)
```
