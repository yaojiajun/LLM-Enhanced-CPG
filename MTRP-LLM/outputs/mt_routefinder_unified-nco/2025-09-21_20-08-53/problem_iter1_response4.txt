```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Customized modification for distance-based heuristic computation
    distance_heuristic = 1 / (current_distance_matrix + 1) * torch.randn_like(current_distance_matrix) * 0.6 + 0.4
    
    # Customized modification for demand-based heuristic score matrix
    demand_score = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 1.2 - torch.max(delivery_node_demands) * 0.7
    
    # Construct total heuristic score
    total_scores = distance_heuristic + demand_score
    
    return total_scores
```
