```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # New calculations for modifying the heuristic function based on current_distance_matrix, delivery_node_demands, and current_load
    # Compute the modified normalized distance-based heuristic score matrix with added diversity through randomness
    modified_dist_scores = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 0.4

    # Compute an alternative demand-based heuristic score matrix with different weight distribution and randomness
    modified_demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.6 + torch.max(
        delivery_node_demands) / 3 + torch.randn_like(current_distance_matrix) * 0.6

    # Introduce increased randomness for exploration with a different noise level for improved diversity
    modified_noise = torch.randn_like(current_distance_matrix) * 1.5

    # Combine the different modified heuristic scores with diversified strategies for balanced exploration
    modified_scores = modified_dist_scores + modified_demand_scores + modified_noise

    # Include the remaining calculations from the original heuristics function for other types of scores

    return modified_scores
```
