```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Generate a new random matrix for diversity
    random_matrix = torch.randn_like(delivery_node_demands)

    # Customized formula for distance-based heuristic score
    distance_heuristic = -(current_distance_matrix ** 2) / torch.max(current_distance_matrix) + random_matrix

    # Customized formula for delivery score with increased emphasis on current load
    delivery_score = (5 * delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)**2) + torch.max(delivery_node_demands) / 2 + random_matrix

    # Original demand heuristic with existing randomness
    demand_scores = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.8 + torch.max(delivery_node_demands) / 2 + torch.randn_like(current_distance_matrix) * 0.5

    # Combining the custom distance and delivery scores with previous demand heuristic
    total_scores = distance_heuristic + delivery_score + demand_scores

    return total_scores
```
