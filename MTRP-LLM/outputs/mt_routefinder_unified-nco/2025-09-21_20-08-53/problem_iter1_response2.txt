```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Modified calculation for distance heuristic
    distance_heuristic = -current_distance_matrix / torch.min(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 1.2
    
    # Modified calculation for delivery score
    delivery_score = (delivery_node_demands.unsqueeze(0) - current_load.unsqueeze(1)) * 0.6 + torch.max(
        delivery_node_demands) / 2 + torch.randn_like(current_distance_matrix) * 0.4
    
    # Calculate noise for diversity and exploration
    enhanced_noise = torch.randn_like(current_distance_matrix) * 1.8

    overall_scores = distance_heuristic + delivery_score + enhanced_noise
    
    return overall_scores

```
