```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Custom heuristics_v2
    
    # New customization for current_distance_matrix
    distance_heuristic = new_distance_computation(current_distance_matrix)

    # New customization for delivery_node_demands
    delivery_score = new_delivery_score(delivery_node_demands, current_load)

    # New customization for current_load
    pickup_score = new_pickup_score(pickup_node_demands, current_load)

    normalized_distance_scores = -distance_heuristic / torch.max(distance_heuristic) + torch.randn_like(
        distance_heuristic) * 0.7

    demand_scores = (delivery_score.unsqueeze(0) - current_load.unsqueeze(1)) * 0.8 + torch.max(
        delivery_score) / 2 + torch.randn_like(distance_heuristic) * 0.5

    enhanced_noise = torch.randn_like(distance_heuristic) * 2.0

    # Combine the different heuristic scores with diversified strategies for balanced exploration
    heuristic_scores = normalized_distance_scores + demand_scores + enhanced_noise

    return heuristic_scores

# These functions below represent placeholder computations and do not contain the actual implementation. They need to be replaced with your custom logic for 'current_distance_matrix', 'delivery_node_demands', and 'current_load' calculations.

def new_distance_computation(current_distance_matrix: torch.Tensor) -> torch.Tensor:
    # Placeholder - Replace with your custom computation for distance heuristic
    return current_distance_matrix

def new_delivery_score(delivery_node_demands: torch.Tensor, current_load: torch.Tensor) -> torch.Tensor:
    # Placeholder - Replace with your custom computation for delivery score
    return delivery_node_demands

def new_pickup_score(pickup_node_demands: torch.Tensor, current_load: torch.Tensor) -> torch.Tensor:
    # Placeholder - Replace with your custom computation for pickup score
    return pickup_node_demands
```
