```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Update the calculation for distance-based heuristic score matrix with modified diversity
    distance_heuristic = -current_distance_matrix / torch.max(current_distance_matrix) + torch.randn_like(
        current_distance_matrix) * 0.9

    # Update the delivery demand based heuristic score with enhanced influence of remaining capacity and higher randomness
    delivery_score = (current_load.unsqueeze(1) - delivery_node_demands) * 0.6 + torch.max(
        delivery_node_demands) / 1.5 + torch.randn_like(current_distance_matrix) * 0.7

    # Introduce additional randomized exploration for varying patterns
    exploration_noise = torch.randn_like(current_distance_matrix) * 1.5

    return distance_heuristic + delivery_score + exploration_noise
```
