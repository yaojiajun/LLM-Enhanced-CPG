```python
def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # New heuristic computations for distance Heuristic V2
    abs_distance_matrix = torch.abs(current_distance_matrix)
    
    distance_scores = abs_distance_matrix / (delivery_node_demands.unsqueeze(0) + current_load.unsqueeze(1) + 1e-8)
        
    # demand-based heuristic score
    demand_scores = (delivery_node_demands + current_load) * 0.6 + torch.randn_like(current_distance_matrix) * 0.5

    # Combine the different heuristic scores
    total_scores = distance_scores + demand_scores

    return total_scores
```
