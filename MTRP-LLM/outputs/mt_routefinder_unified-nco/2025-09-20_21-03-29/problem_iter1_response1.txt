```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Implement modified calculations related to 'current_distance_matrix', 'delivery_node_demands' and 'current_load' here
    # For example:
    
    distance_heuristic = compute_distance_heuristic(current_distance_matrix)  # Custom function to compute distance heuristic
    delivery_score = torch.sqrt(delivery_node_demands) * current_load  # Modified delivery score computation
    pickup_score = pickup_pickup_node_demands * (1 / (current_load + 1e-8))  # Modified pickup score computation
    
    total_score = distance_heuristic + delivery_score - pickup_score
    
    return total_score

# Helper function to compute a distance heuristic
def compute_distance_heuristic(distance_matrix):
    return torch.exp(-distance_matrix)

```
