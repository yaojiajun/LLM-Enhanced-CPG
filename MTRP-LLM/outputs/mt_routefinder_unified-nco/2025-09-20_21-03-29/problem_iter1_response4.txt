```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Modify the calculations for heuristic indicators related to current_distance_matrix, delivery_node_demands, and current_load
    
    # Example modification: Normalizing distance and demand differences
    distance_diff = torch.abs(current_distance_matrix[None, :, :] - current_distance_matrix[:, None, :])
    distance_diff_norm = F.normalize(distance_diff, p=2, dim=-1)
    
    demand_diff = torch.abs(delivery_node_demands[None, :] - delivery_node_demands[:, None])
    demand_diff_norm = F.normalize(demand_diff, p=1, dim=-1)
    
    total_score = distance_diff_norm + demand_diff_norm
    
    return total_score

```
