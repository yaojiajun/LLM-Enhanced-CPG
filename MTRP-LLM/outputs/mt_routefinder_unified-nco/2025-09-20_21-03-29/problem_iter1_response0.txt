```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Customized calculations for 'current_distance_matrix', 'delivery_node_demands', and 'current_load'
    distance_heuristic = torch.rand(current_distance_matrix.shape)  # Replace with a heuristic distance calculation
    delivery_score = torch.clip(1 / (delivery_node_demands + 1e-8), 1e-8, 1e8)  # Avoid division by small values by adding epsilon
    pickup_score = torch.clip(pickup_node_demands / (current_load + 1e-8), 1e-8, 1e8)  # Avoid division by small values by adding epsilon

    # Integration into the total score
    total_score = distance_heuristic - delivery_score + pickup_score

    return total_score

```
