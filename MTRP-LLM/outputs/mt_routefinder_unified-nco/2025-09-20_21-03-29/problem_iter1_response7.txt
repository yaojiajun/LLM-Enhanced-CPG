```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Modify the calculations for the heuristic score matrix
    distance_heuristic = 1/(current_distance_matrix + 1e-8)  # Add small epsilon
    delivery_score = delivery_node_demands / (current_load + 1e-8)
    
    # Introduce some randomness for diversity
    delivery_noise = torch.rand_like(delivery_score)  # Randomness
    delivery_score += delivery_noise
    
    total_score = distance_heuristic + delivery_score
    
    return total_score

```
