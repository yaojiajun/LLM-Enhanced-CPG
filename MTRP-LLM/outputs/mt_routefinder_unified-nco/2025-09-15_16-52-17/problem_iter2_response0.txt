```python
import torch

def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    
    # Add problem-specific knowledge and penalty mechanisms
    penalties = torch.tensor([1.0, 0.8, 0.6, 0.4, 0.2])  # Define penalties based on priority
    
    # Calculate heuristic score matrix with penalties and enhanced randomness
    heuristic_scores = torch.rand_like(current_distance_matrix) * 2 - 1  # Random scores between -1 and 1
    heuristic_scores *= penalties.view(1, -1)  # Apply penalties to scores
    
    return heuristic_scores
```
