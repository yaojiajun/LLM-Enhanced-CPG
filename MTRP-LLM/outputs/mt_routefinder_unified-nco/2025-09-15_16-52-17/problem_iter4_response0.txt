```python
import torch

def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    # Implement heuristics_v2 with penalty based on randomness and additional exploration factor
    exploration_factor = 0.05
    random_scores = torch.rand_like(current_distance_matrix)
    penalty_scores = torch.rand_like(current_distance_matrix) * 0.1  # Introduce penalty based on randomness
    exploration_scores = torch.rand_like(current_distance_matrix) * exploration_factor
    heuristic_scores = random_scores - penalty_scores + exploration_scores

    return heuristic_scores
```
