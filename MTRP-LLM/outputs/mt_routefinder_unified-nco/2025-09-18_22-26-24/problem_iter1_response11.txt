```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    # Example of a heuristic function for scoring edges based on delivery node demands and time window feasibility
    demand_score = torch.sum((delivery_node_demands / current_load).unsqueeze(0) * current_distance_matrix, dim=-1)
    
    window_start_score = F.relu(time_windows[:, 0].unsqueeze(0) - arrival_times[:, :-1])
    window_end_score = F.relu(arrival_times[:, :-1] - time_windows[:, 1].unsqueeze(0))
    time_window_score = torch.max(window_start_score, window_end_score).sum(dim=0)
    
    heuristic_scores = demand_score - time_window_score
    
    return heuristic_scores
```
