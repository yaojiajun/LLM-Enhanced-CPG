```python
import torch

def heuristics_v2(current_distance_matrix, delivery_node_demands, current_load, delivery_node_demands_open, current_load_open, time_windows, arrival_times, pickup_node_demands, current_length):
    # Implement your improved heuristic logic here

    # Example: Calculate a heuristic score matrix based on delivery node demands and current load constraints
    load_diff = delivery_node_demands.view(1, -1) - current_load.view(-1, 1)
    load_diff_open = delivery_node_demands_open.view(1, -1) - current_load_open.view(-1, 1)

    score_matrix = torch.where(load_diff <= 0, load_diff, torch.tensor(-1e9))
    score_matrix_open = torch.where(load_diff_open <= 0, load_diff_open, torch.tensor(-1e9))

    return score_matrix + score_matrix_open

```
