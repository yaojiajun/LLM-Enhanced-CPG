```python
import torch

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor,
                   current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor,
                   current_length: torch.Tensor) -> torch.Tensor:

    # Calculate a heuristic score matrix based on a combination of relevant factors
    load_ratio = current_load.unsqueeze(1) / delivery_node_demands.unsqueeze(0)
    open_load_ratio = current_load_open.unsqueeze(1) / delivery_node_demands_open.unsqueeze(0)
    time_diff = arrival_times[:, 1:] - time_windows[:, 0].unsqueeze(0)
    duration_ratio = current_length.unsqueeze(1) / current_distance_matrix

    # Combine the factors into a heuristic score matrix
    heuristic_score = load_ratio - open_load_ratio + time_diff + duration_ratio

    return heuristic_score
```
