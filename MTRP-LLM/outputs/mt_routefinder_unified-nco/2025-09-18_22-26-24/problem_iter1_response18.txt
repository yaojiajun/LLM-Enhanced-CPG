```python
import torch
import torch.nn.functional as F

def heuristics_v2(current_distance_matrix: torch.Tensor, delivery_node_demands: torch.Tensor, current_load: torch.Tensor, delivery_node_demands_open: torch.Tensor, current_load_open: torch.Tensor, time_windows: torch.Tensor, arrival_times: torch.Tensor, pickup_node_demands: torch.Tensor, current_length: torch.Tensor) -> torch.Tensor:
    
    # Example of heuristics computation based on current load and distance matrix
    load_distance_ratio = current_load.unsqueeze(2) / (current_distance_matrix + 1)  # Add 1 to avoid division by zero
    normalized_load_distance_score = F.normalize(load_distance_ratio, p=2, dim=2)
    
    return normalized_load_distance_score
```
